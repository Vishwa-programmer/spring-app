name: Build -> Push -> Deploy to Lightsail

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17

      - name: Build jar
        run: mvn -B clean package -DskipTests

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-spring-app:${{ github.sha }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        # use an access token as DOCKER_PASSWORD (recommended). :contentReference[oaicite:5]{index=5}

      - name: Push image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-spring-app:${{ github.sha }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create Lightsail deployment JSON
        run: |
          cat > aws-lightsail-containers.json <<'JSON'
          {
            "serviceName":"${{ secrets.LIGHTSAIL_SERVICE_NAME }}",
            "containers":{
              "myapp":{
                "image":"${{ secrets.DOCKER_USERNAME }}/my-spring-app:${{ github.sha }}",
                "ports":{"8080":"HTTP"},
                "environment": {}
              }
            },
            "publicEndpoint":{
              "containerName":"myapp",
              "containerPort":8080,
              "healthCheck":{"protocol":"HTTP","path":"/actuator/health","successCodes":"200"}
            }
          }
          JSON

      - name: Deploy to Lightsail
        run: aws lightsail create-container-service-deployment --cli-input-json file://aws-lightsail-containers.json
